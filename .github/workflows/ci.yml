name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sqllearn_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('apps/backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        cd apps/backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        cd apps/backend
        pytest tests/ -v --cov=app --cov-report=xml
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/sqllearn_test
        SECRET_KEY: test-secret-key
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: apps/backend/coverage.xml
        flags: backend

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        cache-dependency-path: '**/pnpm-lock.yaml'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: |
        pnpm install
    
    - name: Run linting
      run: |
        cd apps/frontend
        pnpm lint
    
    - name: Run tests
      run: |
        cd apps/frontend
        pnpm test --coverage
    
    - name: Build frontend
      run: |
        cd apps/frontend
        pnpm build
      env:
        VITE_API_URL: https://api.example.com

  build-and-push:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./apps/backend
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/sql-learn-backend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/sql-learn-backend:${{ github.sha }}
    
    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./apps/frontend
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/sql-learn-frontend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/sql-learn-frontend:${{ github.sha }}